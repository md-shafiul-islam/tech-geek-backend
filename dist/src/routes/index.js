"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const brand_route_1 = require("./brand.route");
const category_route_1 = require("./category.route");
const initials_route_1 = require("./initials.route");
const metadata_route_1 = require("./metadata.route");
const news_route_1 = require("./news.route");
const post_route_1 = require("./post.route");
const product_route_1 = require("./product.route");
const rating_route_1 = require("./rating.route");
const review_route_1 = require("./review.route");
const sitemap_route_1 = require("./sitemap.route");
const spec_key_route_1 = require("./spec.key.route");
const spec_type_route_1 = require("./spec.type.route");
const specification_route_1 = require("./specification.route");
const user_route_1 = require("./user.route");
const userUrl = `/api/users`;
const categoryUrl = `/api/categories`;
const brandUrl = `/api/brands`;
const postUrl = `/api/posts`;
const productUrl = `/api/products`;
const ratingUrl = `/api/ratings`;
const reviewUrl = `/api/reviews`;
const specKeyUrl = `/api/specification-keys`;
const specTypeUrl = `/api/specification-types`;
const newsUrl = `/api/news`;
const specificationUrl = "/api/specifications";
const metaUrl = "/api/meta-datas";
const tagUrl = "/api/tags";
const intialsUrl = "/api/intials";
exports.default = (app) => {
    app.use(userUrl, user_route_1.userRoute);
    app.use(brandUrl, brand_route_1.brandRoute);
    app.use(categoryUrl, category_route_1.categoryRoute);
    app.use(postUrl, post_route_1.postRoute);
    app.use(productUrl, product_route_1.productRoute);
    app.use(ratingUrl, rating_route_1.ratingRoute);
    app.use(reviewUrl, review_route_1.reviewRoute);
    app.use(specKeyUrl, spec_key_route_1.specKeyRoute);
    app.use(specTypeUrl, spec_type_route_1.specTypeRoute);
    app.use(newsUrl, news_route_1.newsRoute);
    app.use(specificationUrl, specification_route_1.specificationRoute);
    app.use(metaUrl, metadata_route_1.metaRoute);
    app.use(intialsUrl, initials_route_1.initialsRoute);
    app.use(`/api/sitemap`, sitemap_route_1.siteMapRoute);
    app.get("/", (req, resp) => {
        resp.sendStatus(200);
    });
    app.get("/healthCheck", (req, resp) => {
        resp.sendStatus(200);
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0NBQTJDO0FBQzNDLHFEQUFpRDtBQUNqRCxxREFBaUQ7QUFDakQscURBQTZDO0FBQzdDLDZDQUF5QztBQUN6Qyw2Q0FBeUM7QUFDekMsbURBQStDO0FBQy9DLGlEQUE2QztBQUM3QyxpREFBNkM7QUFDN0MsbURBQStDO0FBQy9DLHFEQUFnRDtBQUNoRCx1REFBa0Q7QUFDbEQsK0RBQTJEO0FBQzNELDZDQUF5QztBQUV6QyxNQUFNLE9BQU8sR0FBRyxZQUFZLENBQUM7QUFDN0IsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUM7QUFDdEMsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDO0FBQy9CLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQztBQUM3QixNQUFNLFVBQVUsR0FBRyxlQUFlLENBQUM7QUFDbkMsTUFBTSxTQUFTLEdBQUcsY0FBYyxDQUFDO0FBQ2pDLE1BQU0sU0FBUyxHQUFHLGNBQWMsQ0FBQztBQUNqQyxNQUFNLFVBQVUsR0FBRyx5QkFBeUIsQ0FBQztBQUM3QyxNQUFNLFdBQVcsR0FBRywwQkFBMEIsQ0FBQztBQUMvQyxNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUM7QUFDNUIsTUFBTSxnQkFBZ0IsR0FBRyxxQkFBcUIsQ0FBQztBQUMvQyxNQUFNLE9BQU8sR0FBRyxpQkFBaUIsQ0FBQztBQUNsQyxNQUFNLE1BQU0sR0FBRyxXQUFXLENBQUM7QUFDM0IsTUFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDO0FBRWxDLGtCQUFlLENBQUMsR0FBZ0IsRUFBRSxFQUFFO0lBQ2xDLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLHNCQUFTLENBQUMsQ0FBQztJQUM1QixHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSx3QkFBVSxDQUFDLENBQUM7SUFDOUIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsOEJBQWEsQ0FBQyxDQUFDO0lBQ3BDLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLHNCQUFTLENBQUMsQ0FBQztJQUM1QixHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSw0QkFBWSxDQUFDLENBQUM7SUFDbEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsMEJBQVcsQ0FBQyxDQUFDO0lBQ2hDLEdBQUcsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLDBCQUFXLENBQUMsQ0FBQztJQUNoQyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSw2QkFBWSxDQUFDLENBQUM7SUFDbEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsK0JBQWEsQ0FBQyxDQUFDO0lBQ3BDLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLHNCQUFTLENBQUMsQ0FBQztJQUM1QixHQUFHLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLHdDQUFrQixDQUFDLENBQUM7SUFDOUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsMEJBQVMsQ0FBQyxDQUFDO0lBQzVCLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLDhCQUFhLENBQUMsQ0FBQztJQUNuQyxHQUFHLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSw0QkFBWSxDQUFDLENBQUM7SUFFdEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFZLEVBQUUsSUFBYyxFQUFFLEVBQUU7UUFDNUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDLENBQUMsQ0FBQztJQUVILEdBQUcsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBWSxFQUFFLElBQWMsRUFBRSxFQUFFO1FBQ3ZELElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBsaWNhdGlvbiwgRXhwcmVzcywgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgeyBicmFuZFJvdXRlIH0gZnJvbSBcIi4vYnJhbmQucm91dGVcIjtcclxuaW1wb3J0IHsgY2F0ZWdvcnlSb3V0ZSB9IGZyb20gXCIuL2NhdGVnb3J5LnJvdXRlXCI7XHJcbmltcG9ydCB7IGluaXRpYWxzUm91dGUgfSBmcm9tIFwiLi9pbml0aWFscy5yb3V0ZVwiO1xyXG5pbXBvcnQgeyBtZXRhUm91dGUgfSBmcm9tIFwiLi9tZXRhZGF0YS5yb3V0ZVwiO1xyXG5pbXBvcnQgeyBuZXdzUm91dGUgfSBmcm9tIFwiLi9uZXdzLnJvdXRlXCI7XHJcbmltcG9ydCB7IHBvc3RSb3V0ZSB9IGZyb20gXCIuL3Bvc3Qucm91dGVcIjtcclxuaW1wb3J0IHsgcHJvZHVjdFJvdXRlIH0gZnJvbSBcIi4vcHJvZHVjdC5yb3V0ZVwiO1xyXG5pbXBvcnQgeyByYXRpbmdSb3V0ZSB9IGZyb20gXCIuL3JhdGluZy5yb3V0ZVwiO1xyXG5pbXBvcnQgeyByZXZpZXdSb3V0ZSB9IGZyb20gXCIuL3Jldmlldy5yb3V0ZVwiO1xyXG5pbXBvcnQgeyBzaXRlTWFwUm91dGUgfSBmcm9tIFwiLi9zaXRlbWFwLnJvdXRlXCI7XHJcbmltcG9ydCB7IHNwZWNLZXlSb3V0ZSB9IGZyb20gXCIuL3NwZWMua2V5LnJvdXRlXCI7XHJcbmltcG9ydCB7IHNwZWNUeXBlUm91dGUgfSBmcm9tIFwiLi9zcGVjLnR5cGUucm91dGVcIjtcclxuaW1wb3J0IHsgc3BlY2lmaWNhdGlvblJvdXRlIH0gZnJvbSBcIi4vc3BlY2lmaWNhdGlvbi5yb3V0ZVwiO1xyXG5pbXBvcnQgeyB1c2VyUm91dGUgfSBmcm9tIFwiLi91c2VyLnJvdXRlXCI7XHJcblxyXG5jb25zdCB1c2VyVXJsID0gYC9hcGkvdXNlcnNgO1xyXG5jb25zdCBjYXRlZ29yeVVybCA9IGAvYXBpL2NhdGVnb3JpZXNgO1xyXG5jb25zdCBicmFuZFVybCA9IGAvYXBpL2JyYW5kc2A7XHJcbmNvbnN0IHBvc3RVcmwgPSBgL2FwaS9wb3N0c2A7XHJcbmNvbnN0IHByb2R1Y3RVcmwgPSBgL2FwaS9wcm9kdWN0c2A7XHJcbmNvbnN0IHJhdGluZ1VybCA9IGAvYXBpL3JhdGluZ3NgO1xyXG5jb25zdCByZXZpZXdVcmwgPSBgL2FwaS9yZXZpZXdzYDtcclxuY29uc3Qgc3BlY0tleVVybCA9IGAvYXBpL3NwZWNpZmljYXRpb24ta2V5c2A7XHJcbmNvbnN0IHNwZWNUeXBlVXJsID0gYC9hcGkvc3BlY2lmaWNhdGlvbi10eXBlc2A7XHJcbmNvbnN0IG5ld3NVcmwgPSBgL2FwaS9uZXdzYDtcclxuY29uc3Qgc3BlY2lmaWNhdGlvblVybCA9IFwiL2FwaS9zcGVjaWZpY2F0aW9uc1wiO1xyXG5jb25zdCBtZXRhVXJsID0gXCIvYXBpL21ldGEtZGF0YXNcIjtcclxuY29uc3QgdGFnVXJsID0gXCIvYXBpL3RhZ3NcIjtcclxuY29uc3QgaW50aWFsc1VybCA9IFwiL2FwaS9pbnRpYWxzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCAoYXBwOiBBcHBsaWNhdGlvbikgPT4ge1xyXG4gIGFwcC51c2UodXNlclVybCwgdXNlclJvdXRlKTtcclxuICBhcHAudXNlKGJyYW5kVXJsLCBicmFuZFJvdXRlKTtcclxuICBhcHAudXNlKGNhdGVnb3J5VXJsLCBjYXRlZ29yeVJvdXRlKTtcclxuICBhcHAudXNlKHBvc3RVcmwsIHBvc3RSb3V0ZSk7XHJcbiAgYXBwLnVzZShwcm9kdWN0VXJsLCBwcm9kdWN0Um91dGUpO1xyXG4gIGFwcC51c2UocmF0aW5nVXJsLCByYXRpbmdSb3V0ZSk7XHJcbiAgYXBwLnVzZShyZXZpZXdVcmwsIHJldmlld1JvdXRlKTtcclxuICBhcHAudXNlKHNwZWNLZXlVcmwsIHNwZWNLZXlSb3V0ZSk7XHJcbiAgYXBwLnVzZShzcGVjVHlwZVVybCwgc3BlY1R5cGVSb3V0ZSk7XHJcbiAgYXBwLnVzZShuZXdzVXJsLCBuZXdzUm91dGUpO1xyXG4gIGFwcC51c2Uoc3BlY2lmaWNhdGlvblVybCwgc3BlY2lmaWNhdGlvblJvdXRlKTtcclxuICBhcHAudXNlKG1ldGFVcmwsIG1ldGFSb3V0ZSk7XHJcbiAgYXBwLnVzZShpbnRpYWxzVXJsLCBpbml0aWFsc1JvdXRlKTtcclxuICBhcHAudXNlKGAvYXBpL3NpdGVtYXBgLCBzaXRlTWFwUm91dGUpO1xyXG5cclxuICBhcHAuZ2V0KFwiL1wiLCAocmVxOiBSZXF1ZXN0LCByZXNwOiBSZXNwb25zZSkgPT4ge1xyXG4gICAgcmVzcC5zZW5kU3RhdHVzKDIwMCk7XHJcbiAgfSk7XHJcblxyXG4gIGFwcC5nZXQoXCIvaGVhbHRoQ2hlY2tcIiwgKHJlcTogUmVxdWVzdCwgcmVzcDogUmVzcG9uc2UpID0+IHtcclxuICAgIHJlc3Auc2VuZFN0YXR1cygyMDApO1xyXG4gIH0pO1xyXG59O1xyXG4iXX0=