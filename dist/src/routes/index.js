"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const brand_route_1 = require("./brand.route");
const category_route_1 = require("./category.route");
const initials_route_1 = require("./initials.route");
const metadata_route_1 = require("./metadata.route");
const news_route_1 = require("./news.route");
const post_route_1 = require("./post.route");
const product_route_1 = require("./product.route");
const rating_route_1 = require("./rating.route");
const review_route_1 = require("./review.route");
const sitemap_route_1 = require("./sitemap.route");
const spec_key_route_1 = require("./spec.key.route");
const spec_type_route_1 = require("./spec.type.route");
const specification_route_1 = require("./specification.route");
const user_route_1 = require("./user.route");
const userUrl = `/api/users`;
const categoryUrl = `/api/categories`;
const brandUrl = `/api/brands`;
const postUrl = `/api/posts`;
const productUrl = `/api/products`;
const ratingUrl = `/api/ratings`;
const reviewUrl = `/api/reviews`;
const specKeyUrl = `/api/specification-keys`;
const specTypeUrl = `/api/specification-types`;
const newsUrl = `/api/news`;
const specificationUrl = "/api/specifications";
const metaUrl = "/api/meta-datas";
const intialsUrl = "/api/intials";
exports.default = (app) => {
    app.use(userUrl, user_route_1.userRoute);
    app.use(brandUrl, brand_route_1.brandRoute);
    app.use(categoryUrl, category_route_1.categoryRoute);
    app.use(postUrl, post_route_1.postRoute);
    app.use(productUrl, product_route_1.productRoute);
    app.use(ratingUrl, rating_route_1.ratingRoute);
    app.use(reviewUrl, review_route_1.reviewRoute);
    app.use(specKeyUrl, spec_key_route_1.specKeyRoute);
    app.use(specTypeUrl, spec_type_route_1.specTypeRoute);
    app.use(newsUrl, news_route_1.newsRoute);
    app.use(specificationUrl, specification_route_1.specificationRoute);
    app.use(metaUrl, metadata_route_1.metaRoute);
    app.use(intialsUrl, initials_route_1.initialsRoute);
    app.use(`/api/sitemap`, sitemap_route_1.siteMapRoute);
    app.get("/", (req, resp) => {
        resp.sendStatus(200);
    });
    app.get("/healthCheck", (req, resp) => {
        resp.sendStatus(200);
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsK0NBQTJDO0FBQzNDLHFEQUFpRDtBQUNqRCxxREFBaUQ7QUFDakQscURBQTZDO0FBQzdDLDZDQUF5QztBQUN6Qyw2Q0FBeUM7QUFDekMsbURBQStDO0FBQy9DLGlEQUE2QztBQUM3QyxpREFBNkM7QUFDN0MsbURBQStDO0FBQy9DLHFEQUFnRDtBQUNoRCx1REFBa0Q7QUFDbEQsK0RBQTJEO0FBQzNELDZDQUF5QztBQUV6QyxNQUFNLE9BQU8sR0FBRyxZQUFZLENBQUM7QUFDN0IsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUM7QUFDdEMsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDO0FBQy9CLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQztBQUM3QixNQUFNLFVBQVUsR0FBRyxlQUFlLENBQUM7QUFDbkMsTUFBTSxTQUFTLEdBQUcsY0FBYyxDQUFDO0FBQ2pDLE1BQU0sU0FBUyxHQUFHLGNBQWMsQ0FBQztBQUNqQyxNQUFNLFVBQVUsR0FBRyx5QkFBeUIsQ0FBQztBQUM3QyxNQUFNLFdBQVcsR0FBRywwQkFBMEIsQ0FBQztBQUMvQyxNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUM7QUFDNUIsTUFBTSxnQkFBZ0IsR0FBRyxxQkFBcUIsQ0FBQztBQUMvQyxNQUFNLE9BQU8sR0FBRyxpQkFBaUIsQ0FBQztBQUNsQyxNQUFNLFVBQVUsR0FBRyxjQUFjLENBQUM7QUFFbEMsa0JBQWUsQ0FBQyxHQUFnQixFQUFFLEVBQUU7SUFDbEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsc0JBQVMsQ0FBQyxDQUFDO0lBQzVCLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLHdCQUFVLENBQUMsQ0FBQztJQUM5QixHQUFHLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSw4QkFBYSxDQUFDLENBQUM7SUFDcEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsc0JBQVMsQ0FBQyxDQUFDO0lBQzVCLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLDRCQUFZLENBQUMsQ0FBQztJQUNsQyxHQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSwwQkFBVyxDQUFDLENBQUM7SUFDaEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsMEJBQVcsQ0FBQyxDQUFDO0lBQ2hDLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLDZCQUFZLENBQUMsQ0FBQztJQUNsQyxHQUFHLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSwrQkFBYSxDQUFDLENBQUM7SUFDcEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsc0JBQVMsQ0FBQyxDQUFDO0lBQzVCLEdBQUcsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsd0NBQWtCLENBQUMsQ0FBQztJQUM5QyxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSwwQkFBUyxDQUFDLENBQUM7SUFDNUIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsOEJBQWEsQ0FBQyxDQUFDO0lBQ25DLEdBQUcsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLDRCQUFZLENBQUMsQ0FBQztJQUV0QyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQVksRUFBRSxJQUFjLEVBQUUsRUFBRTtRQUM1QyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBRUgsR0FBRyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFZLEVBQUUsSUFBYyxFQUFFLEVBQUU7UUFDdkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcGxpY2F0aW9uLCBFeHByZXNzLCBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7IGJyYW5kUm91dGUgfSBmcm9tIFwiLi9icmFuZC5yb3V0ZVwiO1xyXG5pbXBvcnQgeyBjYXRlZ29yeVJvdXRlIH0gZnJvbSBcIi4vY2F0ZWdvcnkucm91dGVcIjtcclxuaW1wb3J0IHsgaW5pdGlhbHNSb3V0ZSB9IGZyb20gXCIuL2luaXRpYWxzLnJvdXRlXCI7XHJcbmltcG9ydCB7IG1ldGFSb3V0ZSB9IGZyb20gXCIuL21ldGFkYXRhLnJvdXRlXCI7XHJcbmltcG9ydCB7IG5ld3NSb3V0ZSB9IGZyb20gXCIuL25ld3Mucm91dGVcIjtcclxuaW1wb3J0IHsgcG9zdFJvdXRlIH0gZnJvbSBcIi4vcG9zdC5yb3V0ZVwiO1xyXG5pbXBvcnQgeyBwcm9kdWN0Um91dGUgfSBmcm9tIFwiLi9wcm9kdWN0LnJvdXRlXCI7XHJcbmltcG9ydCB7IHJhdGluZ1JvdXRlIH0gZnJvbSBcIi4vcmF0aW5nLnJvdXRlXCI7XHJcbmltcG9ydCB7IHJldmlld1JvdXRlIH0gZnJvbSBcIi4vcmV2aWV3LnJvdXRlXCI7XHJcbmltcG9ydCB7IHNpdGVNYXBSb3V0ZSB9IGZyb20gXCIuL3NpdGVtYXAucm91dGVcIjtcclxuaW1wb3J0IHsgc3BlY0tleVJvdXRlIH0gZnJvbSBcIi4vc3BlYy5rZXkucm91dGVcIjtcclxuaW1wb3J0IHsgc3BlY1R5cGVSb3V0ZSB9IGZyb20gXCIuL3NwZWMudHlwZS5yb3V0ZVwiO1xyXG5pbXBvcnQgeyBzcGVjaWZpY2F0aW9uUm91dGUgfSBmcm9tIFwiLi9zcGVjaWZpY2F0aW9uLnJvdXRlXCI7XHJcbmltcG9ydCB7IHVzZXJSb3V0ZSB9IGZyb20gXCIuL3VzZXIucm91dGVcIjtcclxuXHJcbmNvbnN0IHVzZXJVcmwgPSBgL2FwaS91c2Vyc2A7XHJcbmNvbnN0IGNhdGVnb3J5VXJsID0gYC9hcGkvY2F0ZWdvcmllc2A7XHJcbmNvbnN0IGJyYW5kVXJsID0gYC9hcGkvYnJhbmRzYDtcclxuY29uc3QgcG9zdFVybCA9IGAvYXBpL3Bvc3RzYDtcclxuY29uc3QgcHJvZHVjdFVybCA9IGAvYXBpL3Byb2R1Y3RzYDtcclxuY29uc3QgcmF0aW5nVXJsID0gYC9hcGkvcmF0aW5nc2A7XHJcbmNvbnN0IHJldmlld1VybCA9IGAvYXBpL3Jldmlld3NgO1xyXG5jb25zdCBzcGVjS2V5VXJsID0gYC9hcGkvc3BlY2lmaWNhdGlvbi1rZXlzYDtcclxuY29uc3Qgc3BlY1R5cGVVcmwgPSBgL2FwaS9zcGVjaWZpY2F0aW9uLXR5cGVzYDtcclxuY29uc3QgbmV3c1VybCA9IGAvYXBpL25ld3NgO1xyXG5jb25zdCBzcGVjaWZpY2F0aW9uVXJsID0gXCIvYXBpL3NwZWNpZmljYXRpb25zXCI7XHJcbmNvbnN0IG1ldGFVcmwgPSBcIi9hcGkvbWV0YS1kYXRhc1wiO1xyXG5jb25zdCBpbnRpYWxzVXJsID0gXCIvYXBpL2ludGlhbHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChhcHA6IEFwcGxpY2F0aW9uKSA9PiB7XHJcbiAgYXBwLnVzZSh1c2VyVXJsLCB1c2VyUm91dGUpO1xyXG4gIGFwcC51c2UoYnJhbmRVcmwsIGJyYW5kUm91dGUpO1xyXG4gIGFwcC51c2UoY2F0ZWdvcnlVcmwsIGNhdGVnb3J5Um91dGUpO1xyXG4gIGFwcC51c2UocG9zdFVybCwgcG9zdFJvdXRlKTtcclxuICBhcHAudXNlKHByb2R1Y3RVcmwsIHByb2R1Y3RSb3V0ZSk7XHJcbiAgYXBwLnVzZShyYXRpbmdVcmwsIHJhdGluZ1JvdXRlKTtcclxuICBhcHAudXNlKHJldmlld1VybCwgcmV2aWV3Um91dGUpO1xyXG4gIGFwcC51c2Uoc3BlY0tleVVybCwgc3BlY0tleVJvdXRlKTtcclxuICBhcHAudXNlKHNwZWNUeXBlVXJsLCBzcGVjVHlwZVJvdXRlKTtcclxuICBhcHAudXNlKG5ld3NVcmwsIG5ld3NSb3V0ZSk7XHJcbiAgYXBwLnVzZShzcGVjaWZpY2F0aW9uVXJsLCBzcGVjaWZpY2F0aW9uUm91dGUpO1xyXG4gIGFwcC51c2UobWV0YVVybCwgbWV0YVJvdXRlKTtcclxuICBhcHAudXNlKGludGlhbHNVcmwsIGluaXRpYWxzUm91dGUpO1xyXG4gIGFwcC51c2UoYC9hcGkvc2l0ZW1hcGAsIHNpdGVNYXBSb3V0ZSk7XHJcblxyXG4gIGFwcC5nZXQoXCIvXCIsIChyZXE6IFJlcXVlc3QsIHJlc3A6IFJlc3BvbnNlKSA9PiB7XHJcbiAgICByZXNwLnNlbmRTdGF0dXMoMjAwKTtcclxuICB9KTtcclxuXHJcbiAgYXBwLmdldChcIi9oZWFsdGhDaGVja1wiLCAocmVxOiBSZXF1ZXN0LCByZXNwOiBSZXNwb25zZSkgPT4ge1xyXG4gICAgcmVzcC5zZW5kU3RhdHVzKDIwMCk7XHJcbiAgfSk7XHJcbn07XHJcbiJdfQ==